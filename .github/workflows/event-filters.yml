name: event filters

on:
  # push:
  #   branches:
  #     - main
  #     - '!feature/*'   #ignoring push on all branches starting with feature/
    # branches-ignore:
    #   - '!bugfix/*'     #ignoring push on all branches starting with bugfix/

  workflow_dispatch:
    inputs:
      example_input:
        description: 'An example input'
        required: true
        default: 'default value'
        type: boolean                             #will expect boolean input
      environment:
        description: 'The environment to deploy to staging/production/testing'
        required: true
        default: 'staging'
        type: environment                         #will display as environment selection
      test-type:
        description: 'The type of tests to run'
        required: true
        default: 'unit'
        type: choice                             #will provide a dropdown selection
        options:
          - unit
          - integration
          - e2e
      message:
        description: 'The message to include in the deployment'
        required: true
        default: 'Deploying to production'
        type: string                             #will expect string input
    # branches:
    #   - main
    # branches-ignore:
    #   - '!feature/*'
    #   - '!bugfix/*'

  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths:
      - 'Dockerfile'
    path-ignore:
      - 'README.md'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: echo "Building..."
      - name: print workflow_dispatch inputs
        run: |
              echo "example_input: ${{ inputs.example_input }}"
              echo "environment: ${{ inputs.environment }}"
              echo "test-type: ${{ inputs['test-type'] }}"
              echo "message: ${{ inputs.message }}"

      - name: if example_input is true
        if: ${{ inputs.example_input == true }}
        run: echo "Example input is true"
